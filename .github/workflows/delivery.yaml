name: Delivery
on:
  pull_request:
    branches:
      - master
    types:
      - opened
      - synchronize
  push:
    branches:
      - master
env:
  GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
  GOOGLE_SERVICE_ACCOUNT_KEY_JSON_BASE64: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY_JSON_BASE64 }}
  NODE_VERSION: 18
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/checkout
      - uses: actions/checkout@v3
      # https://github.com/actions/setup-node
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: npm ci
        run: npm ci --production
      - name: npm run build
        run: npm run build
      # https://github.com/actions/upload-artifact
      - uses: actions/upload-artifact@v3
        with:
          name: public_${{ github.sha }}
          path: public/*
          retention-days: 1
  deploy:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      # https://github.com/actions/checkout
      - uses: actions/checkout@v3
      # https://github.com/actions/setup-node
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      # https://github.com/actions/download-artifact
      - uses: actions/download-artifact@v3
        with:
          name: public_${{ github.sha }}
          path: public
      - name: npm install
        run: npm install -g firebase-tools@$(node -p -e "require('./package.json').devDependencies['firebase-tools']")
      - name: create credentials file
        run: echo ${GOOGLE_SERVICE_ACCOUNT_KEY_JSON_BASE64} | base64 -d > ${GOOGLE_APPLICATION_CREDENTIALS}
      - name: firebase hosting:channel:create
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          channel=$(echo ${{ github.head_ref }} | tr _ -)
          firebase hosting:channel:create ${channel}
        continue-on-error: true
      - name: firebase hosting:channel:deploy
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          channel=$(echo ${{ github.head_ref }} | tr _ -)
          firebase hosting:channel:deploy ${channel}
      - name: firebase deploy
        if: ${{ github.event_name == 'push' }}
        run: firebase deploy
  notify:
    runs-on: ubuntu-latest
    needs:
      - deploy
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      # https://github.com/actions/checkout
      - uses: actions/checkout@v3
      # https://github.com/actions/setup-node
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: npm install
        run: npm install -g firebase-tools@$(node -p -e "require('./package.json').devDependencies['firebase-tools']")
      - name: create credentials file
        run: echo ${GOOGLE_SERVICE_ACCOUNT_KEY_JSON_BASE64} | base64 -d > ${GOOGLE_APPLICATION_CREDENTIALS}
      - name: firebase hosting:channel:open
        id: firebase_hosting_channel_open
        run: |
          channel=$(echo ${{ github.head_ref }} | tr _ -)
          url=$(firebase hosting:channel:open ${channel} | awk '{ print $3 }')
          echo "url=${url}" >> ${GITHUB_OUTPUT}
      # https://github.com/actions/github-script
      - uses: actions/github-script@v6
        env:
          URL: ${{ steps.firebase_hosting_channel_open.outputs.url }}
        with:
          script: |
            const body = `Preview: ${process.env.URL}`

            const options = github.rest.issues.listComments.endpoint.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            })

            const comments = await github.paginate(options)
            const comment = comments.find(c => c.body == body)

            if (comment) {
              return
            }

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            })
